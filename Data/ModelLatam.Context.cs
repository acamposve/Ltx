

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Data
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class latamEntities : DbContext
{
    public latamEntities()
        : base("name=latamEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Address> Address { get; set; }

    public virtual DbSet<Administradores> Administradores { get; set; }

    public virtual DbSet<AgentClientRel> AgentClientRel { get; set; }

    public virtual DbSet<ciudades> ciudades { get; set; }

    public virtual DbSet<configuraciones> configuraciones { get; set; }

    public virtual DbSet<CustomLog> CustomLog { get; set; }

    public virtual DbSet<direcciones> direcciones { get; set; }

    public virtual DbSet<Entities> Entities { get; set; }

    public virtual DbSet<estados> estados { get; set; }

    public virtual DbSet<EventDefinition> EventDefinition { get; set; }

    public virtual DbSet<Events> Events { get; set; }

    public virtual DbSet<line> line { get; set; }

    public virtual DbSet<mensajes> mensajes { get; set; }

    public virtual DbSet<ModeOfTransportation> ModeOfTransportation { get; set; }

    public virtual DbSet<Notification> Notification { get; set; }

    public virtual DbSet<PasswordRecovery> PasswordRecovery { get; set; }

    public virtual DbSet<PaymentTerms> PaymentTerms { get; set; }

    public virtual DbSet<Roles> Roles { get; set; }

    public virtual DbSet<Sexo> Sexo { get; set; }

    public virtual DbSet<Tbl_ExceptionLoggingToDataBase> Tbl_ExceptionLoggingToDataBase { get; set; }

    public virtual DbSet<Users> Users { get; set; }

    public virtual DbSet<WareHouseAttach> WareHouseAttach { get; set; }

    public virtual DbSet<WarehouseReceipts> WarehouseReceipts { get; set; }

    public virtual DbSet<WareHouseReceiptsItems> WareHouseReceiptsItems { get; set; }

    public virtual DbSet<consignatario> consignatario { get; set; }

    public virtual DbSet<Sector> Sector { get; set; }


    public virtual ObjectResult<buscaReceiptUsuario_Result> buscaReceiptUsuario(string consignee)
    {

        var consigneeParameter = consignee != null ?
            new ObjectParameter("consignee", consignee) :
            new ObjectParameter("consignee", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<buscaReceiptUsuario_Result>("buscaReceiptUsuario", consigneeParameter);
    }


    public virtual ObjectResult<pa_ususarioxemail_Result> pa_ususarioxemail(string email)
    {

        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_ususarioxemail_Result>("pa_ususarioxemail", emailParameter);
    }


    public virtual int ExceptionLoggingToDataBase(string exceptionMsg, string exceptionType, string exceptionSource, string exceptionURL)
    {

        var exceptionMsgParameter = exceptionMsg != null ?
            new ObjectParameter("ExceptionMsg", exceptionMsg) :
            new ObjectParameter("ExceptionMsg", typeof(string));


        var exceptionTypeParameter = exceptionType != null ?
            new ObjectParameter("ExceptionType", exceptionType) :
            new ObjectParameter("ExceptionType", typeof(string));


        var exceptionSourceParameter = exceptionSource != null ?
            new ObjectParameter("ExceptionSource", exceptionSource) :
            new ObjectParameter("ExceptionSource", typeof(string));


        var exceptionURLParameter = exceptionURL != null ?
            new ObjectParameter("ExceptionURL", exceptionURL) :
            new ObjectParameter("ExceptionURL", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExceptionLoggingToDataBase", exceptionMsgParameter, exceptionTypeParameter, exceptionSourceParameter, exceptionURLParameter);
    }


    public virtual ObjectResult<lista_estados_ciudades_Result> lista_estados_ciudades()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lista_estados_ciudades_Result>("lista_estados_ciudades");
    }

}

}

